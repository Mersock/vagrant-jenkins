services:
  docker:
    image: docker:dind
    restart: always
    privileged: true
    container_name: docker
    volumes:
      - jenkins-docker-certs:/certs/client 
      - jenkins-data:/var/jenkins_home 
    environment:
      - DOCKER_TLS_CERTDIR=/certs

  jenkins:
    # image: jenkins/jenkins:lts-jdk17
    build:
      context: .
    restart: always
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1

  postgresql:
    image: docker.io/bitnami/postgresql:latest
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    restart: always
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_sonarqube
      - POSTGRESQL_DATABASE=bitnami_sonarqube
    container_name: postgresql

  sonarqube:
    image: docker.io/bitnami/sonarqube:25
    ports:
      - '8082:9000'
    volumes:
      - 'sonarqube_data:/bitnami/sonarqube'
    restart: always
    depends_on:
      - postgresql
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - SONARQUBE_DATABASE_HOST=postgresql
      - SONARQUBE_DATABASE_PORT_NUMBER=5432
      - SONARQUBE_DATABASE_USER=bn_sonarqube
      - SONARQUBE_DATABASE_NAME=bitnami_sonarqube
    container_name: sonarqube


volumes:
  jenkins-data:
  jenkins-docker-certs:
  postgresql_data:
    driver: local
  sonarqube_data:
    driver: local