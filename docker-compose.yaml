services:
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    restart: always
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - jenkins-data:/var/jenkins_home

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: superuser
      MONGO_INITDB_ROOT_PASSWORD: superpass
    container_name: mongo
    volumes:
    - mongo-data:/data/db 

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: superuser
      ME_CONFIG_MONGODB_ADMINPASSWORD: superpass
      ME_CONFIG_MONGODB_URL: mongodb://superuser:superpass@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    container_name: mongo-express

  postgresql:
    image: docker.io/bitnami/postgresql:latest
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    restart: always
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_sonarqube
      - POSTGRESQL_DATABASE=bitnami_sonarqube
    container_name: postgresql

  sonarqube:
    image: docker.io/bitnami/sonarqube:25
    ports:
      - '8082:9000'
    volumes:
      - 'sonarqube_data:/bitnami/sonarqube'
    restart: always
    depends_on:
      - postgresql
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - SONARQUBE_DATABASE_HOST=postgresql
      - SONARQUBE_DATABASE_PORT_NUMBER=5432
      - SONARQUBE_DATABASE_USER=bn_sonarqube
      - SONARQUBE_DATABASE_NAME=bitnami_sonarqube
    container_name: sonarqube


volumes:
  jenkins-data:
  mongo-data:
  postgresql_data:
    driver: local
  sonarqube_data:
    driver: local